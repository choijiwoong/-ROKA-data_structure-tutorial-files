#Sol1)
def sum_all(n):
    s = 0                     # 합을 계산할 변수
    for i in range(1, n + 1): # 1부터 n까지 반복(n + 1은 제외)
        s = s + i
    return s
#O(n)

#Sol2)
print(sum_all(10))              # 1부터 10까지의 합(입력: 10, 출력: 55)
print(sum_all(100))             # 1부터 100까지의 합(입력: 100, 출력: 5050)

def sum_gauss(n):
    return n*(n+1)//2 #정수의 나눗셈

print(sum_gauss(10))              # 1부터 10까지의 합(입력: 10, 출력: 55)
print(sum_gauss(100))             # 1부터 100까지의 합(입력: 100, 출력: 5050)
#O(1)

#O(n): 필요한 계산 횟수가 입력크기 n과 비례할 때
#O(1): 필요한 게산 횟수가 입력크기 n과 무관할 때

#계산 복잡도: 시간 복잡도와 공간 복잡도. 위의 연산횟수->시간과 비례. 거의 시간 복잡도 의미.


